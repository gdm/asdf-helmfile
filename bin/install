#!/usr/bin/env bash

set -euo pipefail

[ -z "${ASDF_INSTALL_TYPE+x}" ] && echo "ASDF_INSTALL_TYPE is required" && exit 1
[ -z "${ASDF_INSTALL_VERSION+x}" ] && echo "ASDF_INSTALL_VERSION is required" && exit 1
[ -z "${ASDF_INSTALL_PATH+x}" ] && echo "ASDF_INSTALL_PATH is required" && exit 1

get_arch() {
  local -r machine="$(uname -m)"
  OVERWRITE_ARCH=${ASDF_OVERWRITE_ARCH:-"false"}
  if [[ $OVERWRITE_ARCH != "false" ]]; then
    echo "$OVERWRITE_ARCH"
  elif [[ $machine == "arm64" ]] || [[ $machine == "aarch64" ]]; then
    echo "arm64"
  elif [[ $machine == *"arm"* ]] || [[ $machine == *"aarch"* ]]; then
    echo "arm"
  elif [[ $machine == *"386"* ]]; then
    echo "386"
  else
    echo "amd64"
  fi
}

install() {
  local install_type=$1
  [ "$install_type" != "version" ] && echo "intall type, $install_type, is not supported" && exit 1
  local version=$2
  local install_path=$3
  local bin_install_path="$install_path/bin"
  local bin_path="${bin_install_path}/helmfile"
  local platform
  [ "Linux" = "$(uname)" ] && platform="linux" || platform="darwin"
  local arch
  arch="$(get_arch)"
  mkdir -p "${bin_install_path}"
  if [ "$(printf '%s\n' "${version}" "0.145.0" | sort -t. -n | head -n1)" = "0.145.0" ]; then
      local download_url="https://github.com/helmfile/helmfile/releases/download/v${version}/helmfile_${version}_${platform}_${arch}.tar.gz"
      echo "Downloading helmfile from ${download_url}"
      curl -sL "$download_url" -o helmfile.tar.gz
      tar -C "$bin_install_path" -xf helmfile.tar.gz helmfile
      rm helmfile.tar.gz
  else
      local download_url="https://github.com/roboll/helmfile/releases/download/v${version}/helmfile_${platform}_${arch}"
      echo "Downloading helmfile from ${download_url}"
      curl -sL "$download_url" -o "$bin_path"
      chmod +x "$bin_path"
  fi
}

install "$ASDF_INSTALL_TYPE" "$ASDF_INSTALL_VERSION" "$ASDF_INSTALL_PATH"
